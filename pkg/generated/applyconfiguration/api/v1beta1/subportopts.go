/*
Copyright 2024 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

// SubportOptsApplyConfiguration represents a declarative configuration of the SubportOpts type for use
// with apply.
type SubportOptsApplyConfiguration struct {
	Network          *NetworkParamApplyConfiguration `json:"network,omitempty"`
	SegmentationID   *int                            `json:"segmentationID,omitempty"`
	SegmentationType *string                         `json:"segmentationType,omitempty"`
}

// SubportOptsApplyConfiguration constructs a declarative configuration of the SubportOpts type for use with
// apply.
func SubportOpts() *SubportOptsApplyConfiguration {
	return &SubportOptsApplyConfiguration{}
}

// WithNetwork sets the Network field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Network field is set to the value of the last call.
func (b *SubportOptsApplyConfiguration) WithNetwork(value *NetworkParamApplyConfiguration) *SubportOptsApplyConfiguration {
	b.Network = value
	return b
}

// WithSegmentationID sets the SegmentationID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SegmentationID field is set to the value of the last call.
func (b *SubportOptsApplyConfiguration) WithSegmentationID(value int) *SubportOptsApplyConfiguration {
	b.SegmentationID = &value
	return b
}

// WithSegmentationType sets the SegmentationType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SegmentationType field is set to the value of the last call.
func (b *SubportOptsApplyConfiguration) WithSegmentationType(value string) *SubportOptsApplyConfiguration {
	b.SegmentationType = &value
	return b
}
